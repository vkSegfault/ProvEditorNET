global:
  scrape_interval: 15s
  scrape_timeout: 10s
  evaluation_interval: 15s
rule_files:
  - rules.yml
alerting:
  alertmanagers:
    - static_configs:
        - targets: ["alert-manager:9093"]
      scheme: http
      timeout: 10s
      api_version: v2
scrape_configs:
  - job_name: prometheus
    honor_timestamps: true
    scrape_interval: 15s
    scrape_timeout: 10s
    metrics_path: /metrics
    scheme: http
    static_configs:
      - targets:
          # if our app runs in K8s cluster then svc name is host
          # if our app runs in another container then IP of the peer container
          - localhost:9090   # localhost inside container is not localhost of machine it runs on!
            
  - job_name: province_editor
    honor_timestamps: true
    scrape_interval: 15s
    scrape_timeout: 10s
    metrics_path: /metrics
    scheme: http
    static_configs:
      - targets:
          # if our app runs in K8s cluster then svc name is host
          # if our app runs in another container then name of the that container
          # - localhost:5077   # this only works because we set in docker compose that Prometheus will use: "network: host"
          - proveditor:8080   # docker service name from compose file - data is fetched via docker network directly from container
          - host.docker.internal:5077   # data is fetched via host that docker engine runs on and port exposed of container
#          - 172.17.0.1:5077
#          - 192.168.0.19:5077
#          - 172.18.0.1:5077
#          - <k8s_svc_name>:5077
#          - <docker_container_name>:5077

  - job_name: node_exporter
    static_configs:
      - targets:
          - node-exporter:9100

  - job_name: cadvisor
    static_configs:
      - targets:
          - cadvisor:8080
            
  - job_name: redis_insight
    static_configs:
      - targets:
          - redis-insight:5540/api/health/