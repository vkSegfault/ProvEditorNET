services:

  postgres:
    image: postgres
    container_name: postgres-provinces
    ports:
      - 5432:5432
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: mydb
    volumes:
      - /home/atf/db/wealthofnation-postgres:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
    networks:
      - monitoring
    extra_hosts:
      - host.docker.internal:172.17.0.1
      - docker.host.internal:172.17.0.1
      - docker.host:127.0.0.1   # ip addr show | grep "\binet\b.*\bdocker0\b" | awk '{print $2}' | cut -d '/' -f 1
#    network_mode: host   # TURN IT OFF IN PROD as it disabled docker network and basically open container network to host

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=pass
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
#    network_mode: host   # TURN IT OFF IN PROD as it disabled docker network
    networks:
      - monitoring
    depends_on:
      - prometheus

volumes:
  prom_data:

networks:
  monitoring:
    driver: bridge
    
# we probably need to put Promtehus and Grafana tohether in one network !